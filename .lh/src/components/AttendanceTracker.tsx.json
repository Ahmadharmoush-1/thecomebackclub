{
    "sourceFile": "src/components/AttendanceTracker.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1756280892359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756281323485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,141 @@\n+import { useState } from \"react\";\r\n+import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n+import { Badge } from \"@/components/ui/badge\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { Progress } from \"@/components/ui/progress\";\r\n+import { Users, TrendingUp, Clock } from \"lucide-react\";\r\n+\r\n+interface AttendanceTrackerProps {\r\n+  sessionName: string;\r\n+  currentAttendees: number;\r\n+  maxCapacity: number;\r\n+  location: string;\r\n+  timeSlot: string;\r\n+  sport: \"Football\" | \"Padel\";\r\n+  onJoinSession?: () => void;\r\n+}\r\n+\r\n+const AttendanceTracker = ({ \r\n+  sessionName, \r\n+  currentAttendees, \r\n+  maxCapacity, \r\n+  location, \r\n+  timeSlot, \r\n+  sport,\r\n+  onJoinSession \r\n+}: AttendanceTrackerProps) => {\r\n+  const [isAnimating, setIsAnimating] = useState(false);\r\n+  \r\n+  const attendancePercentage = (currentAttendees / maxCapacity) * 100;\r\n+  const spotsLeft = maxCapacity - currentAttendees;\r\n+  \r\n+  const getUrgencyLevel = () => {\r\n+    if (spotsLeft <= 2) return \"high\";\r\n+    if (spotsLeft <= 5) return \"medium\";\r\n+    return \"low\";\r\n+  };\r\n+  \r\n+  const getUrgencyColor = () => {\r\n+    const level = getUrgencyLevel();\r\n+    if (level === \"high\") return \"text-red-600\";\r\n+    if (level === \"medium\") return \"text-yellow-600\";\r\n+    return \"text-green-600\";\r\n+  };\r\n+  \r\n+  const getUrgencyMessage = () => {\r\n+    const level = getUrgencyLevel();\r\n+    if (level === \"high\") return spotsLeft === 0 ? \"Session Full!\" : \"Almost Full!\";\r\n+    if (level === \"medium\") return \"Filling Up Fast\";\r\n+    return \"Available\";\r\n+  };\r\n+\r\n+  const handleJoinClick = () => {\r\n+    setIsAnimating(true);\r\n+    onJoinSession?.();\r\n+    setTimeout(() => setIsAnimating(false), 300);\r\n+  };\r\n+\r\n+  return (\r\n+    <Card className=\"relative overflow-hidden hover:shadow-card transition-all duration-300\">\r\n+      {/* Urgency indicator */}\r\n+      {getUrgencyLevel() === \"high\" && (\r\n+        <div className=\"absolute top-0 left-0 right-0 bg-red-500 h-1 animate-pulse\" />\r\n+      )}\r\n+      \r\n+      <CardHeader className=\"pb-3\">\r\n+        <div className=\"flex items-center justify-between\">\r\n+          <CardTitle className=\"text-lg flex items-center gap-2\">\r\n+            <Badge \r\n+              variant={sport === \"Football\" ? \"default\" : \"secondary\"}\r\n+              className={sport === \"Football\" ? \"bg-accent text-accent-foreground\" : \"\"}\r\n+            >\r\n+              {sport}\r\n+            </Badge>\r\n+            {sessionName}\r\n+          </CardTitle>\r\n+          <Badge \r\n+            variant=\"outline\" \r\n+            className={`${getUrgencyColor()} border-current ${\r\n+              getUrgencyLevel() === \"high\" ? \"animate-pulse\" : \"\"\r\n+            }`}\r\n+          >\r\n+            {getUrgencyMessage()}\r\n+          </Badge>\r\n+        </div>\r\n+      </CardHeader>\r\n+      \r\n+      <CardContent className=\"space-y-4\">\r\n+        <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\r\n+          <Clock className=\"h-4 w-4\" />\r\n+          {timeSlot}\r\n+        </div>\r\n+        \r\n+        <div className=\"space-y-2\">\r\n+          <div className=\"flex items-center justify-between text-sm\">\r\n+            <span className=\"flex items-center gap-1\">\r\n+              <Users className=\"h-4 w-4\" />\r\n+              Current Attendance\r\n+            </span>\r\n+            <span className={`font-medium ${getUrgencyColor()}`}>\r\n+              {currentAttendees}/{maxCapacity}\r\n+            </span>\r\n+          </div>\r\n+          \r\n+          <Progress \r\n+            value={attendancePercentage} \r\n+            className=\"h-2\"\r\n+          />\r\n+          \r\n+          <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\r\n+            <span>{spotsLeft} spots left</span>\r\n+            <div className=\"flex items-center gap-1\">\r\n+              <TrendingUp className=\"h-3 w-3\" />\r\n+              <span>{Math.round(attendancePercentage)}% full</span>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+        \r\n+        <div className=\"pt-2\">\r\n+          <Button \r\n+            variant={spotsLeft === 0 ? \"outline\" : \"default\"} \r\n+            className={`w-full transition-all duration-300 ${\r\n+              isAnimating ? \"scale-95\" : \"scale-100\"\r\n+            }`}\r\n+            disabled={spotsLeft === 0}\r\n+            onClick={handleJoinClick}\r\n+          >\r\n+            {spotsLeft === 0 ? \"Session Full\" : \"Reserve Your Spot\"}\r\n+          </Button>\r\n+          \r\n+          {spotsLeft <= 3 && spotsLeft > 0 && (\r\n+            <p className=\"text-xs text-red-600 text-center mt-2 animate-pulse\">\r\n+              âš¡ Only {spotsLeft} spots remaining!\r\n+            </p>\r\n+          )}\r\n+        </div>\r\n+      </CardContent>\r\n+    </Card>\r\n+  );\r\n+};\r\n+\r\n+export default AttendanceTracker;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1756280892359,
            "name": "Commit-0",
            "content": "import { useState } from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { Users, TrendingUp, Clock } from \"lucide-react\";\r\n\r\ninterface AttendanceTrackerProps {\r\n  sessionName: string;\r\n  currentAttendees: number;\r\n  maxCapacity: number;\r\n  location: string;\r\n  timeSlot: string;\r\n  sport: \"Football\" | \"Padel\";\r\n  onJoinSession?: () => void;\r\n}\r\n\r\nconst AttendanceTracker = ({ \r\n  sessionName, \r\n  currentAttendees, \r\n  maxCapacity, \r\n  location, \r\n  timeSlot, \r\n  sport,\r\n  onJoinSession \r\n}: AttendanceTrackerProps) => {\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n  \r\n  const attendancePercentage = (currentAttendees / maxCapacity) * 100;\r\n  const spotsLeft = maxCapacity - currentAttendees;\r\n  \r\n  const getUrgencyLevel = () => {\r\n    if (spotsLeft <= 2) return \"high\";\r\n    if (spotsLeft <= 5) return \"medium\";\r\n    return \"low\";\r\n  };\r\n  \r\n  const getUrgencyColor = () => {\r\n    const level = getUrgencyLevel();\r\n    if (level === \"high\") return \"text-red-600\";\r\n    if (level === \"medium\") return \"text-yellow-600\";\r\n    return \"text-green-600\";\r\n  };\r\n  \r\n  const getUrgencyMessage = () => {\r\n    const level = getUrgencyLevel();\r\n    if (level === \"high\") return spotsLeft === 0 ? \"Session Full!\" : \"Almost Full!\";\r\n    if (level === \"medium\") return \"Filling Up Fast\";\r\n    return \"Available\";\r\n  };\r\n\r\n  const handleJoinClick = () => {\r\n    setIsAnimating(true);\r\n    onJoinSession?.();\r\n    setTimeout(() => setIsAnimating(false), 300);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"relative overflow-hidden hover:shadow-card transition-all duration-300\">\r\n      {/* Urgency indicator */}\r\n      {getUrgencyLevel() === \"high\" && (\r\n        <div className=\"absolute top-0 left-0 right-0 bg-red-500 h-1 animate-pulse\" />\r\n      )}\r\n      \r\n      <CardHeader className=\"pb-3\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <CardTitle className=\"text-lg flex items-center gap-2\">\r\n            <Badge \r\n              variant={sport === \"Football\" ? \"default\" : \"secondary\"}\r\n              className={sport === \"Football\" ? \"bg-accent text-accent-foreground\" : \"\"}\r\n            >\r\n              {sport}\r\n            </Badge>\r\n            {sessionName}\r\n          </CardTitle>\r\n          <Badge \r\n            variant=\"outline\" \r\n            className={`${getUrgencyColor()} border-current ${\r\n              getUrgencyLevel() === \"high\" ? \"animate-pulse\" : \"\"\r\n            }`}\r\n          >\r\n            {getUrgencyMessage()}\r\n          </Badge>\r\n        </div>\r\n      </CardHeader>\r\n      \r\n      <CardContent className=\"space-y-4\">\r\n        <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\r\n          <Clock className=\"h-4 w-4\" />\r\n          {timeSlot}\r\n        </div>\r\n        \r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex items-center justify-between text-sm\">\r\n            <span className=\"flex items-center gap-1\">\r\n              <Users className=\"h-4 w-4\" />\r\n              Current Attendance\r\n            </span>\r\n            <span className={`font-medium ${getUrgencyColor()}`}>\r\n              {currentAttendees}/{maxCapacity}\r\n            </span>\r\n          </div>\r\n          \r\n          <Progress \r\n            value={attendancePercentage} \r\n            className=\"h-2\"\r\n          />\r\n          \r\n          <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\r\n            <span>{spotsLeft} spots left</span>\r\n            <div className=\"flex items-center gap-1\">\r\n              <TrendingUp className=\"h-3 w-3\" />\r\n              <span>{Math.round(attendancePercentage)}% full</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"pt-2\">\r\n          <Button \r\n            variant={spotsLeft === 0 ? \"outline\" : \"cta\"} \r\n            className={`w-full transition-all duration-300 ${\r\n              isAnimating ? \"scale-95\" : \"scale-100\"\r\n            }`}\r\n            disabled={spotsLeft === 0}\r\n            onClick={handleJoinClick}\r\n          >\r\n            {spotsLeft === 0 ? \"Session Full\" : \"Reserve Your Spot\"}\r\n          </Button>\r\n          \r\n          {spotsLeft <= 3 && spotsLeft > 0 && (\r\n            <p className=\"text-xs text-red-600 text-center mt-2 animate-pulse\">\r\n              âš¡ Only {spotsLeft} spots remaining!\r\n            </p>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AttendanceTracker;"
        }
    ]
}